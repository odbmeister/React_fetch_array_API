{"ast":null,"code":"var _jsxFileName = \"/Users/miguelpinheirostuff/Desktop/React_fetch_array_API/react-fetch-api-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variables\n  const [reviews, setReviews] = useState([]); // Holds all the reviews fetched from the server\n  const [filteredData, setFilteredData] = useState([]); // Holds the filtered reviews to be displayed\n  const [initialReviewCount, setInitialReviewCount] = useState(3); // Determines the number of reviews to display initially\n\n  // Load more reviews when the \"Load More\" button is clicked\n  const loadMore = () => {\n    setInitialReviewCount(initialReviewCount + 3);\n  };\n  useEffect(() => {\n    fetchReviewsData();\n  }, []);\n  useEffect(() => {\n    // Update the filteredData whenever the reviews or initialReviewCount changes\n    setFilteredData(reviews.slice(0, initialReviewCount));\n  }, [reviews, initialReviewCount]);\n\n  // Fetching the data from the server/API and sorting it by the correct order\n  const fetchReviewsData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/data');\n      const data = await response.json();\n      const sortedData = data.sort((a, b) => {\n        if (a.brand_id < b.brand_id) return -1;\n        if (a.brand_id > b.brand_id) return 1;\n        return 0;\n      });\n      setReviews(sortedData);\n    } catch (error) {\n      console.log('Error fetching reviews:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews-container\",\n      children: filteredData.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-rating-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logo\",\n            src: review.logo,\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating\",\n            children: Array.from({\n              length: review.info.rating\n            }, (_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"star\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"features\",\n          children: [\"/* Render each feature of the review */\", review.info.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), feature]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: review.terms_and_conditions\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"play-now\",\n          href: review.play_url,\n          children: \"PLAY NOW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, review.brand_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \"/* Display a message if no reviews are found */\", reviews.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 32\n    }, this), \"/* Render the \\\"Load More\\\" button if there are more reviews to load */\", reviews.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"load-more\",\n      onClick: loadMore,\n      disabled: initialReviewCount >= reviews.length,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), \"/* Display a message when all brands have been loaded */\", initialReviewCount >= reviews.length && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: \"All brands have been loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G/E9TCRH3iqR3qEybR3/+M98SDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","reviews","setReviews","filteredData","setFilteredData","initialReviewCount","setInitialReviewCount","loadMore","fetchReviewsData","slice","response","fetch","data","json","sortedData","sort","a","b","brand_id","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","review","src","logo","alt","Array","from","length","info","rating","_","index","features","feature","dangerouslySetInnerHTML","__html","terms_and_conditions","href","play_url","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/miguelpinheirostuff/Desktop/React_fetch_array_API/react-fetch-api-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // State variables\n  const [reviews, setReviews] = useState([]); // Holds all the reviews fetched from the server\n  const [filteredData, setFilteredData] = useState([]); // Holds the filtered reviews to be displayed\n  const [initialReviewCount, setInitialReviewCount] = useState(3); // Determines the number of reviews to display initially\n\n  // Load more reviews when the \"Load More\" button is clicked\n  const loadMore = () => {\n    setInitialReviewCount(initialReviewCount + 3);\n  };\n\n  useEffect(() => {\n    fetchReviewsData();\n  }, []);\n\n  useEffect(() => {\n    // Update the filteredData whenever the reviews or initialReviewCount changes\n    setFilteredData(reviews.slice(0, initialReviewCount));\n  }, [reviews, initialReviewCount]);\n\n  // Fetching the data from the server/API and sorting it by the correct order\n  const fetchReviewsData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/data');\n      const data = await response.json();\n      const sortedData = data.sort((a, b) => {\n        if (a.brand_id < b.brand_id) return -1;\n        if (a.brand_id > b.brand_id) return 1;\n        return 0;\n      });\n      setReviews(sortedData);\n    } catch (error) {\n      console.log('Error fetching reviews:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Reviews</h1>\n      <div className=\"reviews-container\">\n        {/* Render each filtered review */}\n        {filteredData.map((review) => (\n          <div className=\"review\" key={review.brand_id}>\n            <div className=\"logo-rating-container\">\n              <img className=\"logo\" src={review.logo} alt=\"Logo\" />\n              <div className=\"rating\">\n                {/* Render star icons based on the rating */}\n                {Array.from({ length: review.info.rating }, (_, index) => (\n                  <span key={index} className=\"star\"></span>\n                ))}\n              </div>\n            </div>\n            <ul className=\"features\">\n              /* Render each feature of the review */\n              {review.info.features.map((feature, index) => (\n                <li key={index}>\n                  <span className=\"checkmark\"></span>\n                  {feature}\n                </li>\n              ))}\n            </ul>\n            <p dangerouslySetInnerHTML={{ __html: review.terms_and_conditions }}></p>\n            <a className=\"play-now\" href={review.play_url}>PLAY NOW</a>\n          </div>\n        ))}\n      </div>\n      /* Display a message if no reviews are found */\n      {reviews.length === 0 && <p>No reviews found.</p>}\n      /* Render the \"Load More\" button if there are more reviews to load */\n      {reviews.length > 0 && (\n        <button className=\"load-more\" onClick={loadMore} disabled={initialReviewCount >= reviews.length}>\n          Load More\n        </button>\n      )}\n      /* Display a message when all brands have been loaded */\n      {initialReviewCount >= reviews.length && <p className=\"message\">All brands have been loaded.</p>}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}